# Usar imagen base compatible con Raspberry Pi 5 (ARM64)
FROM python:3.11-slim

# Variables de entorno
ENV PYTHONUNBUFFERED=1
ENV POETRY_VERSION=1.8.3
ENV POETRY_HOME="/opt/poetry"
ENV PATH="$POETRY_HOME/bin:$PATH"
ENV POETRY_NO_INTERACTION=1
ENV POETRY_VENV_IN_PROJECT=1

# Dependencias de sistema necesarias para pysam y otras librerías
RUN apt-get update && apt-get install -y --no-install-recommends \
    build-essential \
    gcc \
    g++ \
    make \
    libbz2-dev \
    liblzma-dev \
    zlib1g-dev \
    libcurl4-openssl-dev \
    libssl-dev \
    curl \
    git \
    && rm -rf /var/lib/apt/lists/*

# Instalar Poetry
RUN curl -sSL https://install.python-poetry.org | python3 - --version $POETRY_VERSION

# Directorio de trabajo
WORKDIR /app

# Copiar archivos de configuración de Poetry
COPY pyproject.toml /app/

# Configurar Poetry para no crear entorno virtual (ya estamos en contenedor)
RUN poetry config virtualenvs.create false

# Instalar dependencias
RUN poetry install --only=main --no-root

# Copiar el código fuente
COPY . /app/

# Instalar el paquete en modo desarrollo
RUN poetry install --only=main

# Crear directorio para datos y logs
RUN mkdir -p /app/data /app/logs

# Comando por defecto - usar el script instalado por poetry
CMD ["variant-alert", "--help"]
